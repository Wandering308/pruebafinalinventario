import 'package:path/path.dart';
import 'package:sqflite/sqflite.dart';
import 'package:inventario_app_finish/domain/entities/inventory.dart';
import 'package:inventario_app_finish/domain/entities/product.dart';

class DatabaseHelper {
  static final DatabaseHelper _instance = DatabaseHelper._internal();
  factory DatabaseHelper() => _instance;
  static Database? _database;

  DatabaseHelper._internal();

  Future<Database> get database async {
    if (_database != null) return _database!;
    _database = await _initDatabase();
    return _database!;
  }

  Future<Database> _initDatabase() async {
    final databasePath = await getDatabasesPath();
    final path = join(databasePath, 'inventories.db');

    return await openDatabase(
      path,
      version: 1,
      onCreate: (db, version) async {
        await db.execute('''
          CREATE TABLE inventories(
            id TEXT PRIMARY KEY,
            name TEXT,
            description TEXT
          )
        ''');
        await db.execute('''
          CREATE TABLE products(
            id TEXT PRIMARY KEY,
            inventoryId TEXT,
            name TEXT,
            barcode TEXT,
            quantity INTEGER,
            FOREIGN KEY (inventoryId) REFERENCES inventories (id)
          )
        ''');
      },
    );
  }

  Future<void> insertInventory(Inventory inventory) async {
    final db = await database;
    await db.insert('inventories', inventory.toMap());
  }

  Future<void> insertProduct(Product product) async {
    final db = await database;
    await db.insert('products', product.toMap());
  }

  Future<List<Inventory>> getInventories() async {
    final db = await database;
    final result = await db.query('inventories');
    return result.map((json) => Inventory.fromMap(json)).toList();
  }

  Future<List<Product>> getProducts(String inventoryId) async {
    final db = await database;
    final result = await db.query('products', where: 'inventoryId = ?', whereArgs: [inventoryId]);
    return result.map((json) => Product.fromMap(json)).toList();
  }
}